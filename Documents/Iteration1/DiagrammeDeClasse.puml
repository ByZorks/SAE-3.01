@startuml
interface Sujet {
    + enregistrerObservateur(Observateur)
    + supprimerObservateur(Observateur)
    + notifierObservateurs()
}

interface Observateur {
    + actualiser()
}

class VueArborescence {
    + actualiser()
}

class VueDiagramme {
    + actualiser(TreeView<FileComposite>)
    - buildTree(TreeItem<FileComposite>, FileComposite)
}

class Model {
    - classes : ArrayList<Classe>
    - root : Repertoire
    - treeView : TreeView<FileComposite>
    - observateurs : ArrayList<Observateur>
    + ModelDiagramme()
    + setTreeView(TreeView<FileComposite>)
    + setRootTreeView(
    + getRootTreeView() : TreeView<FileComposite>
    + getTreeView() : TreeView<FileComposite>
    + analyserClasse(String)
    + ajouterClasse(Classe)
    + supprimerClasse(Classe)
    + enregistrerObservateur(Observateur)
    + supprimerObservateur(Observateur)
    + notifierObservateurs()
}

class ControllerArborescence {
    - model : Model
    + ControllerArborescence()
    + handle(MouseEvent)
}

class ControllerDiagramme {
    - model : Model
    + ControllerDiagramme()
    + handle(MouseEvent)
}

abstract FileComposite {
    # file : File
    + FileComposite(File)
    + getParentFolderName() : String
    + toString() : String
    + {abstract} getContenu() : List<FileComposite>
    + {abstract} isDirectory() : boolean
}

class Fichier {
    # file : File
    + FileComposite(File)
    + getContenu() : List<FileComposite>
    + isDirectory() : boolean
}

class Repertoire {
    # file : File
    - contenu : List<FileComposite>
    + FileComposite(File)
    + getContenu() : List<FileComposite>
    + isDirectory() : boolean
}

class Classe {
    - type : String
    - nom: String
    - package : String
    - attributs : ArrayList<String>
    - methodes : ArrayList<String>
    - coordonnées : int[]
    + Classe(String, String, String, ArrayList<String>, ArrayList<String>, int[])
    + getType() : String
    + getNom() : String
    + getPackage() : String
    + getAttributs() : ArrayList<String>
    + getMethodes() : ArrayList<String>
    + getCoordonnées()
    + setCoordonnées(int, int)
    + toString() : String
}

class Analyseur {
    + {static} analyseClasse(String)
    - {static} getClassModifier(Class<?>) : String
    - {static} getNom(Class<?>) : String
    - {static} getPackage(Class<?>) : String
    - {static} getAttributs(Class<?>) : ArrayList<String>
    - {static} getMethodes(Class<?>) : ArrayList<String>
    - {static} getModifierString(int) : String
    - {static} getModifierUMLSymbol(int) : String
}

Sujet <|.. Model

Observateur <|.. VueArborescence
Observateur <|.. VueDiagramme

TreeView <|-- VueArborescence
Pane <|-- VueDiagramme

FileComposite <|-- Fichier
FileComposite <|-- Repertoire

Model "1" --> "0..*" Classe : classes
Model "1" --> "1" Repertoire : root
Model "1" --> "0..*" Observateur : observateurs

ControllerArborescence "1" --> "1" Model : model
ControllerDiagramme "1" --> "1" Model : model

EventHandler <|-- ControllerArborescence
EventHandler <|-- ControllerDiagramme
@enduml